<html>
<head>
<title>ConDec Project Settings</title>
<meta name="decorator" content="atl.admin" />
<meta name="admin.active.section" content="atl.jira.proj.config" />
<meta name="admin.active.tab"
	content="decdoc-project-settings-menu-item" />
<meta name="projectKey" content="$projectKey" />
$webResourceManager.requireResource("de.uhd.ifi.se.decision.management.jira:rest-client-resources")
$webResourceManager.requireResource("de.uhd.ifi.se.decision.management.jira:stylesheet-and-icon-resources")
</head>
<body>
	<form class="aui">
		<h1>Continuous Management of Decision Knowledge (ConDec)</h1>
		<h2>Basic Project Settings</h2>
		<div class="field-group">
			<label for="isActivated-toggle">ConDec Activated?</label>
			<aui-toggle id="isActivated-toggle" value=$projectKey></aui-toggle>
			<script>
                var toggle = document.getElementById('isActivated-toggle');
                    #if ($isActivated == true)
			toggle.checked = true;
                    #else
			toggle.checked = false;
                    #end
                toggle.addEventListener('change', function(error) {
                    this.busy = true;
                    setActivated(this.checked, this.value);
                    this.busy = false;
                });
            </script>
			<div class="description">Enables or disables the plug-in for
				this project.</div>
		</div>
		<div class="field-group">
			<label for="isIssueStrategy-toggle">Store in Issues?</label>
			<aui-toggle id="isIssueStrategy-toggle" value=$projectKey></aui-toggle>
			<script>
                var toggle = document.getElementById('isIssueStrategy-toggle');
                    #if ($isIssueStrategy == true)
			toggle.checked = true;
                    #else
			toggle.checked = false;
                    #end
                toggle.addEventListener('change', function(error) {
                    this.busy = true;
                    setIssueStrategy(this.checked, this.value);
                    this.busy = false;
                });
            </script>
			<div class="description">Sets the persistence strategy for this
				project (either issue strategy or active object strategy). If
				enabled, decision knowledge is stored in JIRA issues. If you choose
				the issue strategy, you need to associate the project with the
				decision knowledge issue type scheme.</div>
		</div>
		<h2 id="additionale-types-header">Additional Decision Knowledge
			Types</h2>
		<script>
		var additionalKnowledgeTypes = [ "Assessment", "Assumption", "Claim", "Constraint", "Context",
		"Goal", "Implication", "Issue", "Solution" ];
		for (i in additionalKnowledgeTypes) {
			var toggleName = additionalKnowledgeTypes[i] + "-toggle";
			html = "<div class='field-group'>";
			html += "<label for=" + toggleName + ">" + additionalKnowledgeTypes[i] + "</label>";
			html += "<aui-toggle id=" + toggleName + " value=$projectKey></aui-toggle>";
			html += "<div class='description'>Enables the " + additionalKnowledgeTypes[i] + " element for this project.</div>";
			html += "</div>";
			document.getElementById("additionale-types-header").insertAdjacentHTML('afterend', html);
		}
		</script>
		<script>
		for (i in additionalKnowledgeTypes) {
			var toggleName = additionalKnowledgeTypes[i] + "-toggle";
			var toggle = document.getElementById(toggleName);
			var isTypeEnabled = isTypeEnabled(additionalKnowledgeTypes[i], toggle.value);
			if (isTypeEnabled == true) {
                    toggle.checked = true;
                } else {
                    toggle.checked = false;
                }
            toggle.addEventListener('change', function(error) {
                this.busy = true;
                enableType(this.checked, additionalKnowledgeTypes[i], this.value);
                this.busy = false;
            });
		}
		</script>
		<h2>Webhook</h2>
		<div class="field-group">
			<label for="webhook-url">URL</label> <input type="text"
				class="text long-field" id="webhook-url" />
			<div class="description">URL that decision knowledge is posted
				to when updated.</div>
		</div>
		<div class="field-group">
			<label for="webhook-secret">Shared Secret</label> <input type="text"
				class="text long-field" id="webhook-secret" />
			<div class="description">Key to authenticate with remote
				server.</div>
		</div>
	</form>
</body>
</html>