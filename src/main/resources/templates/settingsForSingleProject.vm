<html>
<head>
<title>ConDec Project Settings</title>
<meta name="decorator" content="atl.admin" />
<meta name="admin.active.section" content="atl.jira.proj.config" />
<meta name="admin.active.tab"
	content="decdoc-project-settings-menu-item" />
<meta name="projectKey" content="$projectKey" />
$webResourceManager.requireResource("de.uhd.ifi.se.decision.management.jira:rest-client-resources")
$webResourceManager.requireResource("de.uhd.ifi.se.decision.management.jira:stylesheet-and-icon-resources")
</head>
<body>
	<form class="aui">
		<h1>Continuous Management of Decision Knowledge (ConDec)</h1>
		<h2>Basic Project Settings</h2>
		<div class="field-group">
			<label for="isActivated-toggle">ConDec Activated?</label>
			<aui-toggle id="isActivated-toggle" value="$projectKey"
				label="ConDec Activated?"></aui-toggle>
			<script>
                var activationToggle = document.getElementById('isActivated-toggle');
                    #if ($isActivated == true)
			activationToggle.checked = true;
                    #else
			activationToggle.checked = false;
                    #end
                activationToggle.addEventListener('change', function(error) {
                    this.busy = true;
                    setActivated(this.checked, this.value);
                    this.busy = false;
                });
            </script>
			<div class="description">Enables or disables the plug-in for
				this project.</div>
		</div>
		<div class="field-group">
			<label for="isIssueStrategy-toggle">Store in Issues?</label>
			<aui-toggle id="isIssueStrategy-toggle" value="$projectKey"
				label="Store in Issues?"></aui-toggle>
			<script>
                var strategyToggle = document.getElementById('isIssueStrategy-toggle');
                    #if ($isIssueStrategy == true)
			strategyToggle.checked = true;
                    #else
			strategyToggle.checked = false;
                    #end
                strategyToggle.addEventListener('change', function(error) {
                    this.busy = true;
                    setIssueStrategy(this.checked, this.value);
                    this.busy = false;
                });
            </script>
			<div class="description">Sets the persistence strategy for this
				project (either issue strategy or active object strategy). If
				enabled, decision knowledge is stored in JIRA issues. If you choose
				the issue strategy, you need to associate the project with the
				decision knowledge issue type scheme.</div>
		</div>
		<div class="field-group">
			<label for="isKnowledgeExtractedFromGit-toggle">Extract from
				Git?</label>
			<aui-toggle id="isKnowledgeExtractedFromGit-toggle"
				value="$projectKey" label="Extract from	Git?"></aui-toggle>
			<script>
				var gitToggle = document.getElementById('isKnowledgeExtractedFromGit-toggle');
					if ($isKnowledgeExtractedFromGit == true) {
						gitToggle.checked = true;
					} else {
						gitToggle.checked = false;
					};
				gitToggle.addEventListener('change', function(error) {
					this.busy = true;
					setKnowledgeExtractedFromGit(this.checked, this.value);
					this.busy = false;
				});
            </script>
			<div class="description">Enables or disables whether decision
				knowledge is extracted from Git for this project.</div>
		</div>
		<div class="field-group">
			<label for="isKnowledgeExtractedFromIssues-toggle">Extract from
				Issue Comments?</label>
			<aui-toggle id="isKnowledgeExtractedFromIssues-toggle"
				value="$projectKey" label="Extract from	Issue Comments?"></aui-toggle>
			<script>
				var issueToggle = document.getElementById('isKnowledgeExtractedFromIssues-toggle');
					if ($isKnowledgeExtractedFromIssues == true) {
						issueToggle.checked = true;
					} else {
						issueToggle.checked = false;
					};
				issueToggle.addEventListener('change', function(error) {
					this.busy = true;
					setKnowledgeExtractedFromIssues(this.checked, this.value);
					this.busy = false;
				});
            </script>
			<div class="description">Enables or disables whether decision
				knowledge is extracted from issue comments for this project.</div>
		</div>
		<h2 id="additionale-types-header">Additional Decision Knowledge
			Types</h2>
		<script>
		var defaultKnowledgeTypes = [ "Decision", "Problem", "Alternative", "Argument" ];
		html = "<p id='additionale-types-text'> The default decision knowledge types are: ";
		for (i in defaultKnowledgeTypes) {
			html += defaultKnowledgeTypes[i];
			html += "&nbsp;&nbsp;<img src='$imageFolderUrl" + defaultKnowledgeTypes[i] + ".png'> ";
		}
		html += ". If you enable additional decision knowledge types, you need to add them to the ";
		html += "current issue type scheme (when using the issue strategy).<br/><br/></p>";
		document.getElementById("additionale-types-header").insertAdjacentHTML('afterend', html);

		var additionalKnowledgeTypes = [ "Assessment", "Assumption", "Claim", "Constraint", "Context",
		"Goal", "Implication", "Issue", "Solution" ];
		var typeToggles = [];
		for (i in additionalKnowledgeTypes) {
			var toggleName = additionalKnowledgeTypes[i] + "-toggle";
			html =  "<div class='field-group'>";
			html += "<label for=" + toggleName + ">" + additionalKnowledgeTypes[i];
			html += "&nbsp;&nbsp;<img src='$imageFolderUrl" + additionalKnowledgeTypes[i] + ".png'></label>";
			html += "<aui-toggle id='" + toggleName + "' value='" + additionalKnowledgeTypes[i] + "' label='" + additionalKnowledgeTypes[i] + "'></aui-toggle>";
			html += "<div class='description'>Enables the " + additionalKnowledgeTypes[i] + " element for this project.</div>";
			html += "</div>";
			document.getElementById("additionale-types-text").insertAdjacentHTML('afterend', html);
			typeToggles.push(document.getElementById(toggleName));
		}
		</script>
		<script>
		for (j in additionalKnowledgeTypes) {
			isKnowledgeTypeEnabled(typeToggles[j].value, '$projectKey', typeToggles[j], function(isTypeEnabled, toggle) {
			if (isTypeEnabled == true) {
                    toggle.checked = true;
                } else {
                    toggle.checked = false;
                }});
            typeToggles[j].addEventListener('change', function(error) {
                this.busy = true;
                setKnowledgeTypeEnabled(this.checked, this.value, '$projectKey');
                this.busy = false;
            });
		}
		</script>
		<h2>Webhook</h2>
		<div class="field-group">
			<label for="webhook-url">URL</label> <input type="text"
				class="text long-field" id="webhook-url" />
			<div class="description">URL that decision knowledge is posted
				to when updated.</div>
		</div>
		<div class="field-group">
			<label for="webhook-secret">Shared Secret</label> <input type="text"
				class="text long-field" id="webhook-secret" />
			<div class="description">Key to authenticate with remote
				server.</div>
		</div>
	</form>
</body>
</html>